#!/usr/bin/env python

import sys
import pygtk
pygtk.require("2.0")
import gtk
import gtk.glade
import dbus
import dbus.mainloop.glib
import gobject
import soma_apps

from soma_apps.recorder_control.proxy.mock.epoch import Epoch

from soma_apps.recorder_control import datatab
from soma_apps.recorder_control import notesgui
from soma_apps.recorder_control import status
from soma_apps.recorder_control import util


from soma_apps.recorder_control.epochproperty import EpochProperty
from soma_apps.recorder_control.experimentproperty import ExperimentProperty
from soma_apps.recorder_control.recorderapp import RecorderApp

from optparse import OptionParser

       
if __name__ == "__main__":

    parser = OptionParser()
    parser.add_option("-m", "--mock", dest="mock", action="store_true",
                      default=False, 
                      help="use non-DBus mock object")

    (options, args) = parser.parse_args(sys.argv)

    if options.mock:
        from soma_apps.recorder_control.proxy.mock.manager import Manager
        recorderobj = Manager()
    else:
        from soma_apps.recorder_control.proxy.dbus.manager import Manager

        dbus.mainloop.glib.DBusGMainLoop(set_as_default=True)

        bus = dbus.SessionBus()
        robj = bus.get_object('soma.recording.Recorder', 
                              '/soma/recording/recorder')

        recorderobj = Manager(bus, robj)
        
    app = RecorderApp(recorderobj)
    gtk.main()
